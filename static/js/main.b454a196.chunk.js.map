{"version":3,"sources":["services/constances.js","services/ApiConnect.js","utilities/utils.js","components/Initial.js","components/GameOver.js","components/Game.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["baseUrl","API_KEY","getMovies","rand","getRandom","axios","get","params","api_key","page","then","res","data","results","filter","movie","poster_path","title","catch","error","console","log","getActors","actor","profile_path","name","min","max","Math","floor","random","initData","dispatch","a","type","loading","movies","map","movieId","id","cast","actorsfrommovie","actors","Initial","stateChanger","useSelector","state","useDispatch","useEffect","alt","width","height","src","process","FormLabel","style","padding","CircularProgress","Button","variant","onClick","useStyles","makeStyles","theme","paper","position","backgroundColor","palette","background","border","boxShadow","shadows","spacing","GameOver","open","changeOpen","score","changeScore","classes","useState","localStorage","getItem","bestValue","setBestValue","setItem","body","className","Modal","margin","alignItems","justifyContent","display","Game","seconds","setSeconds","setScore","show","setShow","setActor","setMovie","myInterval","setInterval","findFilmMovie","gameOver","clearInterval","newMovie","sample","round","check","button","includes","Typography","paddingBottom","color","App","component","setComponent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b454a196.chunk.js","sourcesContent":["export const baseUrl = 'https://api.themoviedb.org/3/';","import axios from 'axios';\nimport { baseUrl } from './constances';\n\nimport { getRandom } from '../utilities/utils'\n\nexport const API_KEY = \"7ea5f490261a949e52930517e1b4657c\";\n\nexport const getMovies = () => {\n\tlet rand = getRandom(1,50);\n\treturn axios\n\t\t.get(baseUrl + 'movie/popular', {\n\t\t\tparams: { api_key: API_KEY, page: rand },\n\t\t})\n\t\t.then((res) => {\n\t\t\treturn res.data.results.filter(movie => movie.poster_path && movie.title);;\n\t\t})\n\t\t.catch((error) => console.log(error));\n};\n\nexport const getActors = () => {\n\tlet rand = getRandom(1,50);\n\treturn axios\n\t\t.get(baseUrl + 'person/popular', {\n\t\t\tparams: { api_key: API_KEY, page: rand },\n\t\t})\n\t\t.then((res) => {\n\t\t\treturn res.data.results.filter(actor => actor.profile_path && actor.name);\n\t\t})\n\t\t.catch((error) => console.log(error));\n};\n\nexport const getActorsFromMovie = (movieId) => {\n\treturn axios\n\t\t.get(baseUrl + 'movie/' + movieId + '/credits', {\n\t\t\tparams: { api_key: API_KEY },\n\t\t})\n\t\t.then((res) => {\n\t\t\treturn res.data.cast.filter(actor => actor.profile_path && actor.name);\n\t\t})\n\t\t.catch((error) => console.log(error));\n};","\nimport { getMovies, getActors, getActorsFromMovie } from '../services/ApiConnect';\n\n\nexport const getRandom = (min, max) => {\n    return Math.floor(min + Math.random() * (max - min));\n}\n\nexport const initData = async (dispatch) => {\n    dispatch({\n      type: \"SETLOADING\",\n      loading: true\n    });\n    let movies = await getMovies();\n    movies.map(async (movie) => {\n      const actorsfrommovie = await getActorsFromMovie(movie.id);\n      movie.cast = actorsfrommovie;\n    });\n    const actors = await getActors();\n    dispatch({\n      type: \"INITMOVIES\",\n      movies: movies\n    });\n    dispatch({\n      type: \"INITACTORS\",\n      actors: actors\n    });\n    dispatch({\n      type: \"SETLOADING\",\n      loading: false\n    });\n  };","import React, { useEffect } from 'react';\nimport { CircularProgress, Button, FormLabel } from '@material-ui/core';\nimport { useSelector } from \"react-redux\";\nimport { initData } from '../utilities/utils'\nimport { useDispatch } from \"react-redux\";\n\n\nfunction Initial({ stateChanger }) {\n  const { loading } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    initData(dispatch);\n  }, []);\n\n  return (\n    <div>\n      <h2>How To Play :</h2>\n      <p>Vous allez voir une fenêtre avec les éléments ci-dessous. Le chiffre correspond aux secondes restantes, une partie dure 60 secondes. </p>\n      <p>Vous aurez aussi une phrase avec le nom de l'acteur et le titre du film. </p>\n      <p>Puis deux images, la première est celle de l'acteur tandis que la deuxième celle du film. </p>\n      <p>Ensuite vous aurez votre score. Et finalement vous pourrez cliquer sur les boutons oui ou non. </p>\n      <img alt=\"movie\" width=\"550\" height=\"350\" src={process.env.PUBLIC_URL + '/howtoplay.png'} />\n      <FormLabel>\n        <div style={{ padding: 30 }}>\n          {loading\n            ? <CircularProgress />\n            : <Button variant=\"contained\" onClick={() => stateChanger(1)}>Jouer</Button>\n          }\n        </div>\n      </FormLabel>\n    </div>\n  );\n}\n\nexport default Initial;\n","import React, { useEffect, useState } from 'react';\nimport { CircularProgress, Button, Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { initData } from '../utilities/utils';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\n\nfunction GameOver({ open, changeOpen, score, changeScore }) {\n\tconst classes = useStyles();\n\tconst [bestValue, setBestValue] = useState(localStorage.getItem('bestValue') || '');\n\tconst { loading } = useSelector(state => state);\n\tconst dispatch = useDispatch();\n\n\tuseEffect(() => {\n\t\tif (bestValue < score) {\n\t\t\tlocalStorage.setItem('bestValue', bestValue);\n\t\t\tsetBestValue(score)\n\t\t}\n\t\tinitData(dispatch);\n\t}, [score, bestValue]);\n\n\tconst handleClose = () => {\n\t\tchangeOpen(false);\n\t\tchangeScore(0);\n\t};\n\n\tconst body = (\n\t\t<div className={classes.paper}>\n\t\t\t<h2 id=\"simple-modal-title\">Game Over</h2>\n\t\t\t<p id=\"simple-modal-description\">Votre score : {score}</p>\n\t\t\t<p id=\"simple-modal-description\">Meilleur Score : {bestValue}</p>\n\t\t\t{loading\n\t\t\t\t? <CircularProgress />\n\t\t\t\t: <Button variant=\"contained\" onClick={() => handleClose()}>\n\t\t\t\t\tRejouer\n\t\t\t\t</Button>\n\t\t\t}\n\t\t</div>\n\t);\n\treturn (\n\t\t<Modal\n\t\t\tstyle={{\n\t\t\t\tmargin: 'auto',\n\t\t\t\talignItems: 'center',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\tdisplay: 'flex',\n\t\t\t}}\n\t\t\topen={open}\n\t\t>\n\t\t\t{body}\n\t\t</Modal>\n\t);\n}\n\nconst useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tposition: 'absolute',\n\t\twidth: 400,\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: '2px solid #000',\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3),\n\t},\n}));\n\nexport default GameOver;\n","import React, { useState, useEffect } from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport { useSelector } from \"react-redux\";\n\nimport { sample } from 'lodash'\n\nimport GameOver from './GameOver';\n\nfunction Game() {\n\tconst {movies, actors} = useSelector(state => state);\n\tconst [seconds, setSeconds] = useState(60);\n\tconst [score, setScore] = useState(0);\n\tconst [show, setShow] = useState(false);\n\tconst [actor, setActor] = useState([]);\n\tconst [movie, setMovie] = useState([]);\n\n\tuseEffect(() => {\n\t\tlet myInterval = setInterval(async () => {\n\t\t\tif (seconds === 60 && show === false) {\n\t\t\t\tfindFilmMovie();\n\t\t\t}\n\n\t\t\tif (seconds > 0 && show === false) {\n\t\t\t\tsetSeconds(seconds - 1);\n\t\t\t}\n\t\t\tif (seconds === 0) {\n\t\t\t\tgameOver();\n\t\t\t}\n\t\t}, 1000);\n\t\treturn () => {\n\t\t\tclearInterval(myInterval);\n\t\t};\n\t});\n\n\tconst findFilmMovie = async () => {\n\t\tconst newMovie = sample(movies)\n\t\tsetMovie(newMovie);\n\t\tif (Math.round(Math.random()) % 2) setActor(sample(actors));\n\t\telse setActor(sample(newMovie.cast));\n\t};\n\n\tconst gameOver = async () => {\n\t\tsetShow(true);\n\t\tsetSeconds(60);\n\t};\n\n\tconst check = async (button) => {\n\t\tconst value = movie.cast.includes(actor);\n\t\tif (value !== button) gameOver();\n\t\telse {\n\t\t\tsetScore(score + 1);\n\t\t\tfindFilmMovie();\n\t\t};\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1> {seconds} </h1>\n\t\t\t<Typography style={{ paddingBottom: 16 }}>\n\t\t\t\tEst-ce que cet acteur : {actor.name} apparaît dans ce film : {movie.title}?\n\t\t\t</Typography>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\talt=\"actor\"\n\t\t\t\t\twidth=\"250\"\n\t\t\t\t\theight=\"350\"\n\t\t\t\t\tsrc={'https://image.tmdb.org/t/p/w500' + actor.profile_path}\n\t\t\t\t/>\n\t\t\t\t<img alt=\"movie\" width=\"250\" height=\"350\" src={'https://image.tmdb.org/t/p/w500' + movie.poster_path} />\n\t\t\t</div>\n\t\t\t<h1> score : {score} </h1>\n\t\t\t<div style={{ padding: 30 }}>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => check(true)}>\n\t\t\t\t\tOui\n\t\t\t\t</Button>\n\t\t\t\t<Button variant=\"contained\" onClick={() => check(false)}>\n\t\t\t\t\tNon\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t<GameOver open={show} changeOpen={setShow} score={score} changeScore={setScore} />\n\t\t</div>\n\t);\n}\n\nexport default Game;\n","import './css/App.css';\nimport React, {useState} from 'react';\nimport { Typography } from '@material-ui/core';\n\nimport Initial from './components/Initial'\nimport Game from './components/Game'\n\nfunction App() {\n  const [component, setComponent] = useState(0)\n  return (\n    <div className=\"App\">\n      <Typography style={{padding: 16}} variant=\"h1\">\n        Da Movie Quizz\n      </Typography>\n      {component === 0 ? <Initial stateChanger={setComponent}/> : <Game/>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n  movies: [],\n  actors: [],\n  loading: false\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"INITMOVIES\":\n      return {\n        ...state,\n        movies: action.movies\n      };\n    case \"INITACTORS\":\n      return {\n        ...state,\n        actors: action.actors\n      };\n    case \"SETLOADING\":\n      return {\n        ...state,\n        loading: action.loading\n      };\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore } from \"redux\";\nimport { Provider } from 'react-redux'\nimport reducer from './redux/store'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}